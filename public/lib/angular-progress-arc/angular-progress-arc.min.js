/*! angular-progress-arc - v0.3.0 (https://github.com/mathewbyrne/angular-progress-arc) */
!function(a){"use strict";var b=function(a){if(a&&"string"==typeof a){a=a.toLowerCase();for(var b=["true","yes","1"],c=0;c<b.length;c++)if(b[c]===a)return!0}return!1},c={size:200,strokeWidth:20,stroke:"black",background:null},d=a.module("angular-progress-arc",[]);d.directive("progressArc",function(){return{restrict:"E",scope:{size:"@",strokeWidth:"@",stroke:"@",counterClockwise:"@",progress:"&",background:"@"},compile:function(d,e){return a.forEach(c,function(a,b){e[b]||(e[b]=a)}),function(a){a.offset=/firefox/i.test(navigator.userAgent)?-89.9:-90;var c=function(){a.strokeWidthCapped=Math.min(a.strokeWidth,a.size/2),a.radius=(a.size-a.strokeWidthCapped)/2-1,a.circumference=2*Math.PI*a.radius};a.$watchCollection("[size, strokeWidth]",c),a.$watch("counterClockwise",function(){"boolean"!=typeof a.counterClockwise&&(a.counterClockwise=b(a.counterClockwise))}),c()}},template:'<svg ng-attr-width="{{ size }}" ng-attr-height="{{ size }}"><circle fill="none" ng-if="background" ng-attr-cx="{{ size / 2 }}" ng-attr-cy="{{ size / 2 }}" ng-attr-r="{{ radius }}" ng-attr-stroke="{{ background }}" ng-attr-stroke-width="{{ strokeWidthCapped }}"></circle><circle fill="none" ng-attr-cx="{{ size / 2 }}" ng-attr-cy="{{ size / 2 }}" ng-attr-r="{{ radius }}" ng-attr-stroke="{{ stroke }}" ng-attr-stroke-width="{{ strokeWidthCapped }}"ng-attr-stroke-dasharray="{{ circumference }}"ng-attr-stroke-dashoffset="{{ (counterClockwise ? -1 : 1 ) * (1 - progress()) * circumference }}"ng-attr-transform="rotate({{ offset }}, {{ size / 2 }}, {{ size / 2 }})"></circle></svg>'}})}(window.angular);